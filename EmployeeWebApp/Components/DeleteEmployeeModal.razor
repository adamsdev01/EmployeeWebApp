﻿@if (ShowDialog)
{
    <div class="modal fade show d-block" id="deleteEmployeeModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" id="deleteEmployeeModalHeader">
                    <h5 class="modal-title" id="titleLabel">Delete Record</h5>                  
                </div>
                <div class="modal-body">
                    <EditForm Model="@newEmployee" OnValidSubmit="@HandleValidSubmit">
                        <br />
                        <div class="row">
                            <p>Employee Code # <b>@newEmployee.Code</b></p>
                            <p>Employee:<b>@newEmployee.FullName</b></p>
                            <p>Are you sure you want to delete this record?</p>
                        </div>
                        <br />
                        <button type="submit" class="oi oi-trash btn btn-danger"></button>
                        <a class="oi oi-ban btn btn-warning" style="color:white;" @onclick="@Close"></a>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}


@code {

    public bool ShowDialog { get; set; }

    public Employee newEmployee = new();

    public Employee? employeeToEdit { get; set; }

    public int EmployeeId { get; set; }

    [Parameter]
    public EventCallback<bool> CloseEventCallback { get; set; }

    protected override void OnInitialized()
    {
    }

    protected async Task HandleValidSubmit()
    {
        _service.DeleteEmployee(EmployeeId);
        ShowDialog = false;
        await CloseEventCallback.InvokeAsync(true);
        StateHasChanged();
    }

    public void Show(int employeeId)
    {
        ResetDialog();
        ShowDialog = true;
        StateHasChanged();

        EmployeeId = employeeId;
        employeeToEdit = _service.GetEmployeeData(EmployeeId);
        newEmployee = employeeToEdit;
    }

    public void Close()
    {
        ShowDialog = false;
        StateHasChanged();
    }

    private void ResetDialog()
    {
        newEmployee = new Employee { };
    }

}